/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <dt-bindings/zmk/bt.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#define PLOVER 0
#define QWER   1

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |     0    |    1    |    2    |    3    |    4    |     5     |                   |     6     |    7    |    8    |    9    |   10    |   11    |
// |    12    |   13    |   14    |   15    |   16    |     17    |                   |     18    |   19    |   20    |   21    |   22    |   23    |
//   	                          |   24    |   25    |    26     |                   |    27     |   28    |   29    |  
/ {


        keymap {
                compatible = "zmk,keymap";
		
                plover_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   NAV    |    S    |    T    |    P    |    H    |    ST1    |                   |    ST3    |    F    |    P    |    L    |    T    |    D    |
// |   CLEAR  |    S    |    K    |    W    |    R    |    ST2    |                   |    ST4    |    R    |    B    |    G    |    S    |    Z    |
//   	                          |    #    |    A    |     O     |                   |    E      |    U    |    #    |  

    bindings = <
      &to 1       &kp PLV_SL  &kp PLV_TL  &kp PLV_PL  &kp PLV_HL  &kp PLV_ST  &kp PLV_ST   &kp PLV_FR &kp PLV_PR &kp PLV_LR &kp PLV_TR  &kp PLV_DR  
      &kp ESC  &kp PLV_SL  &kp PLV_KL  &kp PLV_WL  &kp PLV_RL  &kp PLV_ST  &kp PLV_ST   &kp PLV_RR &kp PLV_BR &kp PLV_GR &kp PLV_SR  &kp PLV_ZR  
                                         &kp PLV_NM  &kp PLV_A   &kp PLV_O   &kp PLV_E    &kp PLV_U  &kp PLV_NM
    >;
    
};
		QWER_layer {

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
//		|    1	  |    2    |    3    |    4    |			      |    5    |    6    |    7    |    8    |    9       |	
// |   NAV  |   Q    |    W    |    E    |    R    |    T    |                   |    Y    |    U    |    I    |    O    |    P    |       -     |
// |   SPC  |   A    |    S    |    D    |    F    |    G    |                   |    H    |    J    |    K    |    L    |    :    |       +     |
// |  Clear |   Z    |    X    |    C    |    V    |    B    |                   |    N    |    M    |    ,    |    .    |    /    |     SHIFT   |
//   	                       |   CTRL  |   ALT   |   ESC   |                   |   ENT   |   SPC   |   BCSP   |	       
//                                    
      bindings = <
      &to 0       &kp Q  &kp W  &kp E &kp R &kp T     &kp Y &kp U &kp I &kp O &kp P &kp MINUS
      &kp BT_CLR  &kp Z  &kp X  &kp C &kp V &kp B     &kp N &kp M &kp COMMA &kp PERIOD &kp SLASH &kp LSHIFT 
            &kp LCTRL &kp LALT   &kp ESC  &kp ENTER &kp SPACE &kp BACKSPACE
     >;
};
	};

    combos {
        compatible = "zmk,combos";
        combo_a {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <1 13>;
            bindings = <&kp A>;
	    	};
	 combo_s {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <2 14>;
            bindings = <&kp S>;
	    	};
	 combo_d {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <3 15>;
            bindings = <&kp D>;
	    	};
	 combo_f {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <4 16>;
            bindings = <&kp F>;
	    	};
	 combo_g {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <5 17>;
            bindings = <&kp G>;
	    	};
	 combo_h {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <6 18>;
            bindings = <&kp H>;
	    	};
	 combo_j {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <7 19>;
            bindings = <&kp J>;
	    	};
	 combo_k {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <8 20>;
            bindings = <&kp K>;
	    	};
	 combo_l {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <9 21>;
            bindings = <&kp L>;
	    	};
	 combo_colon {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <10 22>;
            bindings = <&kp COLON>;
	    	};
	 combo_plus {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <11 23>;
            bindings = <&kp PLUS>;
	    	};
	 combo_1 {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <1 2>;
            bindings = <&kp N1>;
	    	};
	combo_2 {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <2 3>;
            bindings = <&kp N2>;
	    	};	
	combo_3 {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <3 4>;
            bindings = <&kp N3>;
	    	};
	combo_4 {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <4 5>;
            bindings = <&kp N4>;
	    	};
	combo_5 {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <5 6>;
            bindings = <&kp N5>;
	    	};
	combo_6 {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <6 7>;
            bindings = <&kp N6>;
	    	};
	combo_7 {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <7 8>;
            bindings = <&kp N7>;
	    	};
	combo_8 {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <8 9>;
            bindings = <&kp N8>;
	    	};
	combo_9 {
            timeout-ms = <50>;
	    layers = <1>;
            key-positions = <9  10>;
            bindings = <&kp N9>;
	    	};
	
    };
       		   

};
